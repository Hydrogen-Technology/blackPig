// Code generated by ent, DO NOT EDIT.

package times

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the times type in the database.
	Label = "times"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserId holds the string denoting the userid field in the database.
	FieldUserId = "user_id"
	// FieldTimeSpace holds the string denoting the timespace field in the database.
	FieldTimeSpace = "time_space"
	// FieldStartTime holds the string denoting the starttime field in the database.
	FieldStartTime = "start_time"
	// Table holds the table name of the times in the database.
	Table = "times"
)

// Columns holds all SQL columns for times fields.
var Columns = []string{
	FieldID,
	FieldUserId,
	FieldTimeSpace,
	FieldStartTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Times queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserId orders the results by the userId field.
func ByUserId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserId, opts...).ToFunc()
}

// ByTimeSpace orders the results by the timeSpace field.
func ByTimeSpace(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimeSpace, opts...).ToFunc()
}

// ByStartTime orders the results by the startTime field.
func ByStartTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStartTime, opts...).ToFunc()
}
