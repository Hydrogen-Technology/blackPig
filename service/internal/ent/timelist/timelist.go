// Code generated by ent, DO NOT EDIT.

package timelist

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the timelist type in the database.
	Label = "time_list"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldTimesID holds the string denoting the times_id field in the database.
	FieldTimesID = "times_id"
	// Table holds the table name of the timelist in the database.
	Table = "time_lists"
)

// Columns holds all SQL columns for timelist fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldTimesID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the TimeList queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByTimesID orders the results by the times_id field.
func ByTimesID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimesID, opts...).ToFunc()
}
